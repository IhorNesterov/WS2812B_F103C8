ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"NOS_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/NOS_UART.c"
  18              		.section	.text.NOS_UART_ReceiveReset,"ax",%progbits
  19              		.align	1
  20              		.global	NOS_UART_ReceiveReset
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NOS_UART_ReceiveReset:
  26              	.LVL0:
  27              	.LFB65:
   1:Core/Src/NOS_UART.c **** #include "NOS_UART.h"
   2:Core/Src/NOS_UART.c **** 
   3:Core/Src/NOS_UART.c **** NOS_UART_Struct* NOS_UART_ReceiveReset(NOS_UART_Struct* data)
   4:Core/Src/NOS_UART.c **** {
  28              		.loc 1 4 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
   5:Core/Src/NOS_UART.c ****     data->lastMessageSize = data->currMessageLenght;
  33              		.loc 1 5 5 view .LVU1
  34              		.loc 1 5 33 is_stmt 0 view .LVU2
  35 0000 00F58053 		add	r3, r0, #4096
  36 0004 9968     		ldr	r1, [r3, #8]
  37              		.loc 1 5 27 view .LVU3
  38 0006 5985     		strh	r1, [r3, #42]	@ movhi
   6:Core/Src/NOS_UART.c ****     data->rx_buff_ptr = data->rx_buff;
  39              		.loc 1 6 5 is_stmt 1 view .LVU4
  40              		.loc 1 6 23 is_stmt 0 view .LVU5
  41 0008 9861     		str	r0, [r3, #24]
   7:Core/Src/NOS_UART.c ****     data->currMessageLenght = 0;
  42              		.loc 1 7 5 is_stmt 1 view .LVU6
  43              		.loc 1 7 29 is_stmt 0 view .LVU7
  44 000a 0022     		movs	r2, #0
  45 000c 9A60     		str	r2, [r3, #8]
   8:Core/Src/NOS_UART.c ****     data->startReceive = false;
  46              		.loc 1 8 5 is_stmt 1 view .LVU8
  47              		.loc 1 8 24 is_stmt 0 view .LVU9
  48 000e 1A74     		strb	r2, [r3, #16]
   9:Core/Src/NOS_UART.c ****     data->rx_flag = true;
  49              		.loc 1 9 5 is_stmt 1 view .LVU10
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 2


  50              		.loc 1 9 19 is_stmt 0 view .LVU11
  51 0010 0122     		movs	r2, #1
  52 0012 9A71     		strb	r2, [r3, #6]
  10:Core/Src/NOS_UART.c ****     return data;
  53              		.loc 1 10 5 is_stmt 1 view .LVU12
  11:Core/Src/NOS_UART.c **** }
  54              		.loc 1 11 1 is_stmt 0 view .LVU13
  55 0014 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE65:
  59              		.section	.text.NOS_UART_ContinueReceive,"ax",%progbits
  60              		.align	1
  61              		.global	NOS_UART_ContinueReceive
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  66              	NOS_UART_ContinueReceive:
  67              	.LVL1:
  68              	.LFB66:
  12:Core/Src/NOS_UART.c **** 
  13:Core/Src/NOS_UART.c **** NOS_UART_Struct* NOS_UART_ContinueReceive(NOS_UART_Struct* data)
  14:Core/Src/NOS_UART.c **** {
  69              		.loc 1 14 1 is_stmt 1 view -0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		.loc 1 14 1 is_stmt 0 view .LVU15
  74 0000 00B5     		push	{lr}
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 14, -4
  15:Core/Src/NOS_UART.c ****     data->rx_buff[data->currMessageLenght] = *data->rx_buff_ptr;
  77              		.loc 1 15 5 is_stmt 1 view .LVU16
  78              		.loc 1 15 51 is_stmt 0 view .LVU17
  79 0002 00F58052 		add	r2, r0, #4096
  80              		.loc 1 15 46 view .LVU18
  81 0006 9169     		ldr	r1, [r2, #24]
  82 0008 11F801CB 		ldrb	ip, [r1], #1	@ zero_extendqisi2
  83              		.loc 1 15 44 view .LVU19
  84 000c D2F808E0 		ldr	lr, [r2, #8]
  85 0010 00F80EC0 		strb	ip, [r0, lr]
  16:Core/Src/NOS_UART.c ****     ++data->rx_buff_ptr;
  86              		.loc 1 16 5 is_stmt 1 view .LVU20
  87 0014 9161     		str	r1, [r2, #24]
  17:Core/Src/NOS_UART.c ****     return data;
  88              		.loc 1 17 5 view .LVU21
  18:Core/Src/NOS_UART.c **** }
  89              		.loc 1 18 1 is_stmt 0 view .LVU22
  90 0016 5DF804FB 		ldr	pc, [sp], #4
  91              		.cfi_endproc
  92              	.LFE66:
  94              		.section	.text.NOS_UART_ReceiveAbort,"ax",%progbits
  95              		.align	1
  96              		.global	NOS_UART_ReceiveAbort
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 101              	NOS_UART_ReceiveAbort:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 3


 102              	.LVL2:
 103              	.LFB67:
  19:Core/Src/NOS_UART.c **** 
  20:Core/Src/NOS_UART.c **** void NOS_UART_ReceiveAbort(NOS_UART_Struct* data,UART_HandleTypeDef* uart)
  21:Core/Src/NOS_UART.c **** {
 104              		.loc 1 21 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		.loc 1 21 1 is_stmt 0 view .LVU24
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 0446     		mov	r4, r0
 114 0004 0846     		mov	r0, r1
 115              	.LVL3:
  22:Core/Src/NOS_UART.c ****     for(int i = 0; i < BUFFER_SIZE; i++)
 116              		.loc 1 22 5 is_stmt 1 view .LVU25
 117              	.LBB2:
 118              		.loc 1 22 9 view .LVU26
 119              		.loc 1 22 13 is_stmt 0 view .LVU27
 120 0006 0023     		movs	r3, #0
 121              		.loc 1 22 5 view .LVU28
 122 0008 02E0     		b	.L5
 123              	.LVL4:
 124              	.L6:
  23:Core/Src/NOS_UART.c ****     {
  24:Core/Src/NOS_UART.c ****         data->rx_buff[i] = 0;
 125              		.loc 1 24 9 is_stmt 1 discriminator 3 view .LVU29
 126              		.loc 1 24 26 is_stmt 0 discriminator 3 view .LVU30
 127 000a 0022     		movs	r2, #0
 128 000c E254     		strb	r2, [r4, r3]
  22:Core/Src/NOS_UART.c ****     for(int i = 0; i < BUFFER_SIZE; i++)
 129              		.loc 1 22 38 is_stmt 1 discriminator 3 view .LVU31
 130 000e 0133     		adds	r3, r3, #1
 131              	.LVL5:
 132              	.L5:
  22:Core/Src/NOS_UART.c ****     for(int i = 0; i < BUFFER_SIZE; i++)
 133              		.loc 1 22 22 discriminator 1 view .LVU32
 134 0010 B3F5006F 		cmp	r3, #2048
 135 0014 F9DB     		blt	.L6
 136              	.LBE2:
  25:Core/Src/NOS_UART.c ****     }
  26:Core/Src/NOS_UART.c **** 
  27:Core/Src/NOS_UART.c ****     data->rx_buff_ptr = data->rx_buff;
 137              		.loc 1 27 5 view .LVU33
 138              		.loc 1 27 23 is_stmt 0 view .LVU34
 139 0016 04F58053 		add	r3, r4, #4096
 140              	.LVL6:
 141              		.loc 1 27 23 view .LVU35
 142 001a 9C61     		str	r4, [r3, #24]
  28:Core/Src/NOS_UART.c ****     data->index = 0;
 143              		.loc 1 28 5 is_stmt 1 view .LVU36
 144              		.loc 1 28 17 is_stmt 0 view .LVU37
 145 001c 0022     		movs	r2, #0
 146 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 4


  29:Core/Src/NOS_UART.c ****     data->currMessageLenght = 0;
 147              		.loc 1 29 5 is_stmt 1 view .LVU38
 148              		.loc 1 29 29 is_stmt 0 view .LVU39
 149 0020 9A60     		str	r2, [r3, #8]
  30:Core/Src/NOS_UART.c ****     data->expectedMessageLenght = 0;
 150              		.loc 1 30 5 is_stmt 1 view .LVU40
 151              		.loc 1 30 33 is_stmt 0 view .LVU41
 152 0022 DA60     		str	r2, [r3, #12]
  31:Core/Src/NOS_UART.c ****     data->startReceive = false;
 153              		.loc 1 31 5 is_stmt 1 view .LVU42
 154              		.loc 1 31 24 is_stmt 0 view .LVU43
 155 0024 1A74     		strb	r2, [r3, #16]
  32:Core/Src/NOS_UART.c ****     data->endReceive = false;
 156              		.loc 1 32 5 is_stmt 1 view .LVU44
 157              		.loc 1 32 22 is_stmt 0 view .LVU45
 158 0026 5A74     		strb	r2, [r3, #17]
  33:Core/Src/NOS_UART.c ****     data->bufferCommand = false;
 159              		.loc 1 33 5 is_stmt 1 view .LVU46
 160              		.loc 1 33 25 is_stmt 0 view .LVU47
 161 0028 9A74     		strb	r2, [r3, #18]
  34:Core/Src/NOS_UART.c ****     data->rx_flag = false;
 162              		.loc 1 34 5 is_stmt 1 view .LVU48
 163              		.loc 1 34 19 is_stmt 0 view .LVU49
 164 002a 9A71     		strb	r2, [r3, #6]
  35:Core/Src/NOS_UART.c ****     data->receiveTimeAbort = 400;
 165              		.loc 1 35 5 is_stmt 1 view .LVU50
 166              		.loc 1 35 28 is_stmt 0 view .LVU51
 167 002c 4FF4C872 		mov	r2, #400
 168 0030 1A62     		str	r2, [r3, #32]
  36:Core/Src/NOS_UART.c ****     HAL_UART_Receive_IT (uart, data->rx_buff_ptr, 1); 
 169              		.loc 1 36 5 is_stmt 1 view .LVU52
 170 0032 0122     		movs	r2, #1
 171 0034 2146     		mov	r1, r4
 172              	.LVL7:
 173              		.loc 1 36 5 is_stmt 0 view .LVU53
 174 0036 FFF7FEFF 		bl	HAL_UART_Receive_IT
 175              	.LVL8:
  37:Core/Src/NOS_UART.c **** }
 176              		.loc 1 37 1 view .LVU54
 177 003a 10BD     		pop	{r4, pc}
 178              		.loc 1 37 1 view .LVU55
 179              		.cfi_endproc
 180              	.LFE67:
 182              		.section	.text.NOS_UART_Timer_Handler,"ax",%progbits
 183              		.align	1
 184              		.global	NOS_UART_Timer_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	NOS_UART_Timer_Handler:
 190              	.LVL9:
 191              	.LFB68:
  38:Core/Src/NOS_UART.c **** 
  39:Core/Src/NOS_UART.c **** void NOS_UART_Timer_Handler(NOS_UART_Struct* uart)
  40:Core/Src/NOS_UART.c **** {
 192              		.loc 1 40 1 is_stmt 1 view -0
 193              		.cfi_startproc
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 5


 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
  41:Core/Src/NOS_UART.c ****         if(uart->startReceive && !uart->receiveCheck)
 197              		.loc 1 41 9 view .LVU57
 198              		.loc 1 41 16 is_stmt 0 view .LVU58
 199 0000 00F58053 		add	r3, r0, #4096
 200 0004 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 201              		.loc 1 41 11 view .LVU59
 202 0006 5BB1     		cbz	r3, .L9
 203              		.loc 1 41 39 discriminator 1 view .LVU60
 204 0008 00F58053 		add	r3, r0, #4096
 205 000c 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 206              		.loc 1 41 31 discriminator 1 view .LVU61
 207 0010 33B9     		cbnz	r3, .L9
  42:Core/Src/NOS_UART.c ****         {
  43:Core/Src/NOS_UART.c ****             uart->receiveTime = 0;
 208              		.loc 1 43 13 is_stmt 1 view .LVU62
 209              		.loc 1 43 31 is_stmt 0 view .LVU63
 210 0012 00F58053 		add	r3, r0, #4096
 211 0016 0022     		movs	r2, #0
 212 0018 DA61     		str	r2, [r3, #28]
  44:Core/Src/NOS_UART.c ****             uart->receiveCheck = true;
 213              		.loc 1 44 13 is_stmt 1 view .LVU64
 214              		.loc 1 44 32 is_stmt 0 view .LVU65
 215 001a 0122     		movs	r2, #1
 216 001c 83F82920 		strb	r2, [r3, #41]
 217              	.L9:
  45:Core/Src/NOS_UART.c ****         }
  46:Core/Src/NOS_UART.c **** 
  47:Core/Src/NOS_UART.c ****         if(uart->receiveCheck && uart->receiveTime > uart->receiveTimeAbort)
 218              		.loc 1 47 9 is_stmt 1 view .LVU66
 219              		.loc 1 47 16 is_stmt 0 view .LVU67
 220 0020 00F58053 		add	r3, r0, #4096
 221 0024 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 222              		.loc 1 47 11 view .LVU68
 223 0028 5BB1     		cbz	r3, .L10
 224              		.loc 1 47 38 discriminator 1 view .LVU69
 225 002a 00F58053 		add	r3, r0, #4096
 226 002e DA69     		ldr	r2, [r3, #28]
 227              		.loc 1 47 58 discriminator 1 view .LVU70
 228 0030 1B6A     		ldr	r3, [r3, #32]
 229              		.loc 1 47 31 discriminator 1 view .LVU71
 230 0032 9A42     		cmp	r2, r3
 231 0034 05DD     		ble	.L10
  48:Core/Src/NOS_UART.c ****         {
  49:Core/Src/NOS_UART.c ****             uart->receiveTime = 0;
 232              		.loc 1 49 13 is_stmt 1 view .LVU72
 233              		.loc 1 49 31 is_stmt 0 view .LVU73
 234 0036 00F58053 		add	r3, r0, #4096
 235 003a 0022     		movs	r2, #0
 236 003c DA61     		str	r2, [r3, #28]
  50:Core/Src/NOS_UART.c ****             uart->receiveCheck = false;
 237              		.loc 1 50 13 is_stmt 1 view .LVU74
 238              		.loc 1 50 32 is_stmt 0 view .LVU75
 239 003e 83F82920 		strb	r2, [r3, #41]
 240              	.L10:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 6


  51:Core/Src/NOS_UART.c ****             //NOS_UART_ReceiveAbort(uart,hua);
  52:Core/Src/NOS_UART.c ****         }
  53:Core/Src/NOS_UART.c ****         
  54:Core/Src/NOS_UART.c ****         uart->receiveTime++;
 241              		.loc 1 54 9 is_stmt 1 view .LVU76
 242              		.loc 1 54 13 is_stmt 0 view .LVU77
 243 0042 00F58050 		add	r0, r0, #4096
 244              	.LVL10:
 245              		.loc 1 54 13 view .LVU78
 246 0046 C369     		ldr	r3, [r0, #28]
 247              		.loc 1 54 26 view .LVU79
 248 0048 0133     		adds	r3, r3, #1
 249 004a C361     		str	r3, [r0, #28]
  55:Core/Src/NOS_UART.c **** }
 250              		.loc 1 55 1 view .LVU80
 251 004c 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE68:
 255              		.section	.text.GetCRC16,"ax",%progbits
 256              		.align	1
 257              		.global	GetCRC16
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 262              	GetCRC16:
 263              	.LVL11:
 264              	.LFB69:
  56:Core/Src/NOS_UART.c **** /*
  57:Core/Src/NOS_UART.c **** void NOS_UART_ReceiveHandler(NOS_UART_Struct* data,UART_HandleTypeDef* uart)
  58:Core/Src/NOS_UART.c **** {
  59:Core/Src/NOS_UART.c **** 
  60:Core/Src/NOS_UART.c ****     data->rx_buff_ptr = &data->rx_buff[data->currMessageLenght];
  61:Core/Src/NOS_UART.c ****     data->fuckBuff[data->fuckIndex] = *data->rx_buff_ptr;
  62:Core/Src/NOS_UART.c ****     data->fuckIndex++;
  63:Core/Src/NOS_UART.c **** 
  64:Core/Src/NOS_UART.c ****     if((*data->rx_buff_ptr == UART_ADDRESS || *data->rx_buff_ptr == 0x66 || *data->rx_buff_ptr == 0
  65:Core/Src/NOS_UART.c ****     {
  66:Core/Src/NOS_UART.c ****         data->startReceive = true;
  67:Core/Src/NOS_UART.c ****         data->currMessageLenght = 0;
  68:Core/Src/NOS_UART.c **** 
  69:Core/Src/NOS_UART.c ****         data->fuckIndex = 1;
  70:Core/Src/NOS_UART.c ****         for(int i = 0; i < BUFFER_SIZE; i++)
  71:Core/Src/NOS_UART.c ****         {
  72:Core/Src/NOS_UART.c ****             data->fuckBuff[i] = 0;
  73:Core/Src/NOS_UART.c ****         }
  74:Core/Src/NOS_UART.c ****         data->fuckBuff[0] = *data->rx_buff_ptr; 
  75:Core/Src/NOS_UART.c ****     }
  76:Core/Src/NOS_UART.c **** 
  77:Core/Src/NOS_UART.c ****     if(data->startReceive && data->currMessageLenght == 1 && !data->bufferCommand)
  78:Core/Src/NOS_UART.c ****     {
  79:Core/Src/NOS_UART.c ****         data->value.bytes[1] = *data->rx_buff_ptr;
  80:Core/Src/NOS_UART.c ****     }
  81:Core/Src/NOS_UART.c **** 
  82:Core/Src/NOS_UART.c ****     if(data->startReceive && data->currMessageLenght == 2 && !data->bufferCommand)
  83:Core/Src/NOS_UART.c ****     {
  84:Core/Src/NOS_UART.c ****         data->value.bytes[0] = *data->rx_buff_ptr;
  85:Core/Src/NOS_UART.c ****         data->expectedMessageLenght = data->value.data;
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 7


  86:Core/Src/NOS_UART.c ****         data->bufferCommand = true;
  87:Core/Src/NOS_UART.c ****     }
  88:Core/Src/NOS_UART.c **** 
  89:Core/Src/NOS_UART.c ****     if(data->fuckIndex > BUFFER_SIZE)
  90:Core/Src/NOS_UART.c ****     {
  91:Core/Src/NOS_UART.c ****         data->fuckIndex = 0;
  92:Core/Src/NOS_UART.c ****     }
  93:Core/Src/NOS_UART.c **** 
  94:Core/Src/NOS_UART.c ****     data->currMessageLenght++;
  95:Core/Src/NOS_UART.c **** 
  96:Core/Src/NOS_UART.c ****     if(data->startReceive && (data->currMessageLenght == data->expectedMessageLenght) && data->buff
  97:Core/Src/NOS_UART.c ****     {
  98:Core/Src/NOS_UART.c ****         data = NOS_UART_ReceiveReset(data);
  99:Core/Src/NOS_UART.c ****         data->bufferCommand = false;
 100:Core/Src/NOS_UART.c ****         data->startReceive = false;
 101:Core/Src/NOS_UART.c ****     }
 102:Core/Src/NOS_UART.c ****     else
 103:Core/Src/NOS_UART.c ****     {
 104:Core/Src/NOS_UART.c ****         data = NOS_UART_ContinueReceive(data);
 105:Core/Src/NOS_UART.c ****     }
 106:Core/Src/NOS_UART.c ****     HAL_UART_Receive_IT (uart, data->rx_buff_ptr, 1); 
 107:Core/Src/NOS_UART.c ****     
 108:Core/Src/NOS_UART.c **** }
 109:Core/Src/NOS_UART.c **** */
 110:Core/Src/NOS_UART.c **** 
 111:Core/Src/NOS_UART.c **** uint16_t GetCRC16(uint8_t *buf, int len)
 112:Core/Src/NOS_UART.c **** {  
 265              		.loc 1 112 1 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 112 1 is_stmt 0 view .LVU82
 270 0000 00B5     		push	{lr}
 271              		.cfi_def_cfa_offset 4
 272              		.cfi_offset 14, -4
 113:Core/Src/NOS_UART.c ****   unsigned int crc = 0xFFFF;
 273              		.loc 1 113 3 is_stmt 1 view .LVU83
 274              	.LVL12:
 114:Core/Src/NOS_UART.c ****   for (int pos = 0; pos < len; pos++)
 275              		.loc 1 114 3 view .LVU84
 276              	.LBB3:
 277              		.loc 1 114 8 view .LVU85
 278              		.loc 1 114 12 is_stmt 0 view .LVU86
 279 0002 4FF0000E 		mov	lr, #0
 280              	.LBE3:
 113:Core/Src/NOS_UART.c ****   unsigned int crc = 0xFFFF;
 281              		.loc 1 113 16 view .LVU87
 282 0006 4FF6FF73 		movw	r3, #65535
 283              	.LBB6:
 284              		.loc 1 114 3 view .LVU88
 285 000a 0CE0     		b	.L12
 286              	.LVL13:
 287              	.L14:
 288              	.LBB4:
 115:Core/Src/NOS_UART.c ****   {
 116:Core/Src/NOS_UART.c ****   crc ^= (unsigned int)buf[pos];    // XOR byte into least sig. byte of crc
 117:Core/Src/NOS_UART.c **** 
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 8


 118:Core/Src/NOS_UART.c ****   for (int i = 8; i != 0; i--) {    // Loop over each bit
 119:Core/Src/NOS_UART.c ****     if ((crc & 0x0001) != 0) {      // If the LSB is set
 120:Core/Src/NOS_UART.c ****       crc >>= 1;                    // Shift right and XOR 0xA001
 121:Core/Src/NOS_UART.c ****       crc ^= 0xA001;
 122:Core/Src/NOS_UART.c ****     }
 123:Core/Src/NOS_UART.c ****     else                            // Else LSB is not set
 124:Core/Src/NOS_UART.c ****       crc >>= 1;                    // Just shift right
 289              		.loc 1 124 7 is_stmt 1 view .LVU89
 290              		.loc 1 124 11 is_stmt 0 view .LVU90
 291 000c 5B08     		lsrs	r3, r3, #1
 292              	.LVL14:
 293              	.L15:
 118:Core/Src/NOS_UART.c ****     if ((crc & 0x0001) != 0) {      // If the LSB is set
 294              		.loc 1 118 28 is_stmt 1 discriminator 2 view .LVU91
 295 000e 013A     		subs	r2, r2, #1
 296              	.LVL15:
 297              	.L13:
 118:Core/Src/NOS_UART.c ****     if ((crc & 0x0001) != 0) {      // If the LSB is set
 298              		.loc 1 118 21 discriminator 1 view .LVU92
 299 0010 3AB1     		cbz	r2, .L19
 119:Core/Src/NOS_UART.c ****       crc >>= 1;                    // Shift right and XOR 0xA001
 300              		.loc 1 119 5 view .LVU93
 119:Core/Src/NOS_UART.c ****       crc >>= 1;                    // Shift right and XOR 0xA001
 301              		.loc 1 119 8 is_stmt 0 view .LVU94
 302 0012 13F0010F 		tst	r3, #1
 303 0016 F9D0     		beq	.L14
 120:Core/Src/NOS_UART.c ****       crc ^= 0xA001;
 304              		.loc 1 120 7 is_stmt 1 view .LVU95
 305              	.LVL16:
 121:Core/Src/NOS_UART.c ****     }
 306              		.loc 1 121 7 view .LVU96
 121:Core/Src/NOS_UART.c ****     }
 307              		.loc 1 121 11 is_stmt 0 view .LVU97
 308 0018 4AF2010C 		movw	ip, #40961
 309 001c 8CEA5303 		eor	r3, ip, r3, lsr #1
 310              	.LVL17:
 121:Core/Src/NOS_UART.c ****     }
 311              		.loc 1 121 11 view .LVU98
 312 0020 F5E7     		b	.L15
 313              	.L19:
 121:Core/Src/NOS_UART.c ****     }
 314              		.loc 1 121 11 view .LVU99
 315              	.LBE4:
 114:Core/Src/NOS_UART.c ****   {
 316              		.loc 1 114 35 is_stmt 1 discriminator 2 view .LVU100
 317 0022 0EF1010E 		add	lr, lr, #1
 318              	.LVL18:
 319              	.L12:
 114:Core/Src/NOS_UART.c ****   {
 320              		.loc 1 114 25 discriminator 1 view .LVU101
 321 0026 8E45     		cmp	lr, r1
 322 0028 04DA     		bge	.L20
 116:Core/Src/NOS_UART.c **** 
 323              		.loc 1 116 3 view .LVU102
 116:Core/Src/NOS_UART.c **** 
 324              		.loc 1 116 27 is_stmt 0 view .LVU103
 325 002a 10F80E20 		ldrb	r2, [r0, lr]	@ zero_extendqisi2
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 9


 116:Core/Src/NOS_UART.c **** 
 326              		.loc 1 116 7 view .LVU104
 327 002e 5340     		eors	r3, r3, r2
 328              	.LVL19:
 118:Core/Src/NOS_UART.c ****     if ((crc & 0x0001) != 0) {      // If the LSB is set
 329              		.loc 1 118 3 is_stmt 1 view .LVU105
 330              	.LBB5:
 118:Core/Src/NOS_UART.c ****     if ((crc & 0x0001) != 0) {      // If the LSB is set
 331              		.loc 1 118 8 view .LVU106
 118:Core/Src/NOS_UART.c ****     if ((crc & 0x0001) != 0) {      // If the LSB is set
 332              		.loc 1 118 12 is_stmt 0 view .LVU107
 333 0030 0822     		movs	r2, #8
 118:Core/Src/NOS_UART.c ****     if ((crc & 0x0001) != 0) {      // If the LSB is set
 334              		.loc 1 118 3 view .LVU108
 335 0032 EDE7     		b	.L13
 336              	.LVL20:
 337              	.L20:
 118:Core/Src/NOS_UART.c ****     if ((crc & 0x0001) != 0) {      // If the LSB is set
 338              		.loc 1 118 3 view .LVU109
 339              	.LBE5:
 340              	.LBE6:
 125:Core/Src/NOS_UART.c ****     }
 126:Core/Src/NOS_UART.c ****   }
 127:Core/Src/NOS_UART.c **** 
 128:Core/Src/NOS_UART.c ****   return crc;
 341              		.loc 1 128 3 is_stmt 1 view .LVU110
 129:Core/Src/NOS_UART.c **** }
 342              		.loc 1 129 1 is_stmt 0 view .LVU111
 343 0034 98B2     		uxth	r0, r3
 344              	.LVL21:
 345              		.loc 1 129 1 view .LVU112
 346 0036 5DF804FB 		ldr	pc, [sp], #4
 347              		.cfi_endproc
 348              	.LFE69:
 350              		.section	.text.NOS_UART_ReceiveHandler,"ax",%progbits
 351              		.align	1
 352              		.global	NOS_UART_ReceiveHandler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 357              	NOS_UART_ReceiveHandler:
 358              	.LVL22:
 359              	.LFB70:
 130:Core/Src/NOS_UART.c **** /*
 131:Core/Src/NOS_UART.c **** void NOS_UART_ReceiveHandler(NOS_UART_Struct* data,UART_HandleTypeDef* uart)
 132:Core/Src/NOS_UART.c **** {
 133:Core/Src/NOS_UART.c ****     //data->rx_buff_ptr = &data->rx_buff[data->currMessageLenght];
 134:Core/Src/NOS_UART.c ****     data->fuckBuff[data->fuckIndex] = *data->rx_buff_ptr;
 135:Core/Src/NOS_UART.c ****     data->fuckIndex++;
 136:Core/Src/NOS_UART.c **** 
 137:Core/Src/NOS_UART.c ****     data->startReceive = true;
 138:Core/Src/NOS_UART.c **** 
 139:Core/Src/NOS_UART.c ****     data->lastReceivedByteTime = 0; 
 140:Core/Src/NOS_UART.c ****     data->currMessageLenght++;
 141:Core/Src/NOS_UART.c ****     
 142:Core/Src/NOS_UART.c ****     if(data->currMessageLenght == 32)
 143:Core/Src/NOS_UART.c ****     {
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 10


 144:Core/Src/NOS_UART.c ****         data->rx_buff[data->index] = *data->rx_buff_ptr;
 145:Core/Src/NOS_UART.c ****         ++data->index;
 146:Core/Src/NOS_UART.c ****         ++data->rx_buff_ptr;
 147:Core/Src/NOS_UART.c ****         data->index = 0;
 148:Core/Src/NOS_UART.c ****         data = NOS_UART_ReceiveReset(data);
 149:Core/Src/NOS_UART.c ****     }
 150:Core/Src/NOS_UART.c ****     else
 151:Core/Src/NOS_UART.c ****     {
 152:Core/Src/NOS_UART.c ****         data->rx_buff[data->index] = *data->rx_buff_ptr;
 153:Core/Src/NOS_UART.c ****         ++data->index;
 154:Core/Src/NOS_UART.c ****         ++data->rx_buff_ptr;
 155:Core/Src/NOS_UART.c ****     }
 156:Core/Src/NOS_UART.c **** 
 157:Core/Src/NOS_UART.c ****     HAL_UART_Receive_IT (uart, data->rx_buff_ptr, 1); 
 158:Core/Src/NOS_UART.c **** }
 159:Core/Src/NOS_UART.c **** */
 160:Core/Src/NOS_UART.c **** 
 161:Core/Src/NOS_UART.c **** void NOS_UART_ReceiveHandler(NOS_UART_Struct* data,UART_HandleTypeDef* uart)
 162:Core/Src/NOS_UART.c **** {
 360              		.loc 1 162 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		.loc 1 162 1 is_stmt 0 view .LVU114
 365 0000 10B5     		push	{r4, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 4, -8
 368              		.cfi_offset 14, -4
 369 0002 8446     		mov	ip, r0
 370 0004 0846     		mov	r0, r1
 371              	.LVL23:
 163:Core/Src/NOS_UART.c ****     data->fuckBuff[data->fuckIndex] = *data->rx_buff_ptr;
 372              		.loc 1 163 5 is_stmt 1 view .LVU115
 373              		.loc 1 163 44 is_stmt 0 view .LVU116
 374 0006 0CF58052 		add	r2, ip, #4096
 375 000a 9169     		ldr	r1, [r2, #24]
 376              	.LVL24:
 377              		.loc 1 163 24 view .LVU117
 378 000c 9388     		ldrh	r3, [r2, #4]
 379              		.loc 1 163 39 view .LVU118
 380 000e 91F800E0 		ldrb	lr, [r1]	@ zero_extendqisi2
 381              		.loc 1 163 37 view .LVU119
 382 0012 0CEB0304 		add	r4, ip, r3
 383 0016 84F800E8 		strb	lr, [r4, #2048]
 164:Core/Src/NOS_UART.c ****     
 165:Core/Src/NOS_UART.c ****     data->fuckIndex++;
 384              		.loc 1 165 5 is_stmt 1 view .LVU120
 385              		.loc 1 165 20 is_stmt 0 view .LVU121
 386 001a 0133     		adds	r3, r3, #1
 387 001c 9BB2     		uxth	r3, r3
 388 001e 9380     		strh	r3, [r2, #4]	@ movhi
 166:Core/Src/NOS_UART.c **** 
 167:Core/Src/NOS_UART.c ****     if(data->fuckIndex > 2048)
 389              		.loc 1 167 5 is_stmt 1 view .LVU122
 390              		.loc 1 167 7 is_stmt 0 view .LVU123
 391 0020 B3F5006F 		cmp	r3, #2048
 392 0024 02D9     		bls	.L22
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 11


 168:Core/Src/NOS_UART.c ****     {
 169:Core/Src/NOS_UART.c ****         data->fuckIndex = 0;
 393              		.loc 1 169 9 is_stmt 1 view .LVU124
 394              		.loc 1 169 25 is_stmt 0 view .LVU125
 395 0026 1346     		mov	r3, r2
 396 0028 0022     		movs	r2, #0
 397 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 398              	.L22:
 170:Core/Src/NOS_UART.c ****     }
 171:Core/Src/NOS_UART.c **** 
 172:Core/Src/NOS_UART.c ****     data->startReceive = true;
 399              		.loc 1 172 5 is_stmt 1 view .LVU126
 400              		.loc 1 172 24 is_stmt 0 view .LVU127
 401 002c 0CF58053 		add	r3, ip, #4096
 402 0030 0122     		movs	r2, #1
 403 0032 1A74     		strb	r2, [r3, #16]
 173:Core/Src/NOS_UART.c **** 
 174:Core/Src/NOS_UART.c ****     data->lastReceivedByteTime = 0; 
 404              		.loc 1 174 5 is_stmt 1 view .LVU128
 405              		.loc 1 174 32 is_stmt 0 view .LVU129
 406 0034 0024     		movs	r4, #0
 407 0036 5C62     		str	r4, [r3, #36]
 175:Core/Src/NOS_UART.c ****     data->currMessageLenght++;
 408              		.loc 1 175 5 is_stmt 1 view .LVU130
 409              		.loc 1 175 9 is_stmt 0 view .LVU131
 410 0038 9C68     		ldr	r4, [r3, #8]
 411              		.loc 1 175 28 view .LVU132
 412 003a 1444     		add	r4, r4, r2
 413 003c 9C60     		str	r4, [r3, #8]
 176:Core/Src/NOS_UART.c ****     
 177:Core/Src/NOS_UART.c ****     data->rx_buff[data->index] = *data->rx_buff_ptr;
 414              		.loc 1 177 5 is_stmt 1 view .LVU133
 415              		.loc 1 177 23 is_stmt 0 view .LVU134
 416 003e 1C68     		ldr	r4, [r3]
 417              		.loc 1 177 34 view .LVU135
 418 0040 11F801EB 		ldrb	lr, [r1], #1	@ zero_extendqisi2
 419              		.loc 1 177 32 view .LVU136
 420 0044 0CF804E0 		strb	lr, [ip, r4]
 178:Core/Src/NOS_UART.c ****     ++data->index;
 421              		.loc 1 178 5 is_stmt 1 view .LVU137
 422 0048 1444     		add	r4, r4, r2
 423 004a 1C60     		str	r4, [r3]
 179:Core/Src/NOS_UART.c ****     ++data->rx_buff_ptr;
 424              		.loc 1 179 5 view .LVU138
 425 004c 9961     		str	r1, [r3, #24]
 180:Core/Src/NOS_UART.c ****     
 181:Core/Src/NOS_UART.c ****     HAL_UART_Receive_IT (uart, data->rx_buff_ptr, 1); 
 426              		.loc 1 181 5 view .LVU139
 427 004e FFF7FEFF 		bl	HAL_UART_Receive_IT
 428              	.LVL25:
 182:Core/Src/NOS_UART.c **** }
 429              		.loc 1 182 1 is_stmt 0 view .LVU140
 430 0052 10BD     		pop	{r4, pc}
 431              		.cfi_endproc
 432              	.LFE70:
 434              		.section	.text.NOS_UART_ParsePacket,"ax",%progbits
 435              		.align	1
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 12


 436              		.global	NOS_UART_ParsePacket
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 441              	NOS_UART_ParsePacket:
 442              	.LVL26:
 443              	.LFB71:
 183:Core/Src/NOS_UART.c **** 
 184:Core/Src/NOS_UART.c **** //addr1 addr0 channel1 channel0 count1 count0 packetId3 packetId2 packetId1 packetId0 command3 comm
 185:Core/Src/NOS_UART.c **** //maxLenght 1024B  minLenght 32B packetInfo 16B
 186:Core/Src/NOS_UART.c ****     NOS_Short currCRC;
 187:Core/Src/NOS_UART.c **** bool NOS_UART_ParsePacket(NOS_UART_Struct* data,UART_Message* message)
 188:Core/Src/NOS_UART.c **** {
 444              		.loc 1 188 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		.loc 1 188 1 is_stmt 0 view .LVU142
 449 0000 38B5     		push	{r3, r4, r5, lr}
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 3, -16
 452              		.cfi_offset 4, -12
 453              		.cfi_offset 5, -8
 454              		.cfi_offset 14, -4
 455 0002 0D46     		mov	r5, r1
 189:Core/Src/NOS_UART.c ****     int currPos = 0;
 456              		.loc 1 189 5 is_stmt 1 view .LVU143
 457              	.LVL27:
 190:Core/Src/NOS_UART.c **** 
 191:Core/Src/NOS_UART.c ****     message->address.bytes[1] = data->rx_buff[currPos++];
 458              		.loc 1 191 5 view .LVU144
 459              		.loc 1 191 46 is_stmt 0 view .LVU145
 460 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 461              		.loc 1 191 31 view .LVU146
 462 0006 4B70     		strb	r3, [r1, #1]
 192:Core/Src/NOS_UART.c ****     message->address.bytes[0] = data->rx_buff[currPos++];
 463              		.loc 1 192 5 is_stmt 1 view .LVU147
 464              	.LVL28:
 465              		.loc 1 192 46 is_stmt 0 view .LVU148
 466 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 467              		.loc 1 192 31 view .LVU149
 468 000a 0B70     		strb	r3, [r1]
 193:Core/Src/NOS_UART.c **** 
 194:Core/Src/NOS_UART.c ****     message->channel.bytes[1] = data->rx_buff[currPos++];
 469              		.loc 1 194 5 is_stmt 1 view .LVU150
 470              	.LVL29:
 471              		.loc 1 194 46 is_stmt 0 view .LVU151
 472 000c 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 473              		.loc 1 194 31 view .LVU152
 474 000e CB70     		strb	r3, [r1, #3]
 195:Core/Src/NOS_UART.c ****     message->channel.bytes[0] = data->rx_buff[currPos++];
 475              		.loc 1 195 5 is_stmt 1 view .LVU153
 476              	.LVL30:
 477              		.loc 1 195 46 is_stmt 0 view .LVU154
 478 0010 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 479              		.loc 1 195 31 view .LVU155
 480 0012 8B70     		strb	r3, [r1, #2]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 13


 196:Core/Src/NOS_UART.c **** 
 197:Core/Src/NOS_UART.c ****     message->byteCount.bytes[1] = data->rx_buff[currPos++];
 481              		.loc 1 197 5 is_stmt 1 view .LVU156
 482              	.LVL31:
 483              		.loc 1 197 48 is_stmt 0 view .LVU157
 484 0014 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 485              		.loc 1 197 33 view .LVU158
 486 0016 4B71     		strb	r3, [r1, #5]
 198:Core/Src/NOS_UART.c ****     message->byteCount.bytes[0] = data->rx_buff[currPos++];
 487              		.loc 1 198 5 is_stmt 1 view .LVU159
 488              	.LVL32:
 489              		.loc 1 198 48 is_stmt 0 view .LVU160
 490 0018 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 491              		.loc 1 198 33 view .LVU161
 492 001a 0B71     		strb	r3, [r1, #4]
 199:Core/Src/NOS_UART.c **** 
 200:Core/Src/NOS_UART.c ****     if(message->byteCount.data > 1024)
 493              		.loc 1 200 5 is_stmt 1 view .LVU162
 494              		.loc 1 200 26 is_stmt 0 view .LVU163
 495 001c 8988     		ldrh	r1, [r1, #4]
 496              	.LVL33:
 497              		.loc 1 200 7 view .LVU164
 498 001e B1F5806F 		cmp	r1, #1024
 499 0022 38D8     		bhi	.L29
 500 0024 0446     		mov	r4, r0
 201:Core/Src/NOS_UART.c ****     {
 202:Core/Src/NOS_UART.c ****         return false;
 203:Core/Src/NOS_UART.c ****     }
 204:Core/Src/NOS_UART.c **** 
 205:Core/Src/NOS_UART.c ****     message->packetId.bytes[3] = data->rx_buff[currPos++];
 501              		.loc 1 205 5 is_stmt 1 view .LVU165
 502              	.LVL34:
 503              		.loc 1 205 47 is_stmt 0 view .LVU166
 504 0026 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 505              		.loc 1 205 32 view .LVU167
 506 0028 EB72     		strb	r3, [r5, #11]
 206:Core/Src/NOS_UART.c ****     message->packetId.bytes[2] = data->rx_buff[currPos++];
 507              		.loc 1 206 5 is_stmt 1 view .LVU168
 508              	.LVL35:
 509              		.loc 1 206 47 is_stmt 0 view .LVU169
 510 002a C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 511              		.loc 1 206 32 view .LVU170
 512 002c AB72     		strb	r3, [r5, #10]
 207:Core/Src/NOS_UART.c ****     message->packetId.bytes[1] = data->rx_buff[currPos++];
 513              		.loc 1 207 5 is_stmt 1 view .LVU171
 514              	.LVL36:
 515              		.loc 1 207 47 is_stmt 0 view .LVU172
 516 002e 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 517              		.loc 1 207 32 view .LVU173
 518 0030 6B72     		strb	r3, [r5, #9]
 208:Core/Src/NOS_UART.c ****     message->packetId.bytes[0] = data->rx_buff[currPos++];
 519              		.loc 1 208 5 is_stmt 1 view .LVU174
 520              	.LVL37:
 521              		.loc 1 208 47 is_stmt 0 view .LVU175
 522 0032 437A     		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 523              		.loc 1 208 32 view .LVU176
 524 0034 2B72     		strb	r3, [r5, #8]
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 14


 209:Core/Src/NOS_UART.c **** 
 210:Core/Src/NOS_UART.c ****     message->command.bytes[3] = data->rx_buff[currPos++];
 525              		.loc 1 210 5 is_stmt 1 view .LVU177
 526              	.LVL38:
 527              		.loc 1 210 46 is_stmt 0 view .LVU178
 528 0036 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 529              		.loc 1 210 31 view .LVU179
 530 0038 EB73     		strb	r3, [r5, #15]
 211:Core/Src/NOS_UART.c ****     message->command.bytes[2] = data->rx_buff[currPos++];
 531              		.loc 1 211 5 is_stmt 1 view .LVU180
 532              	.LVL39:
 533              		.loc 1 211 46 is_stmt 0 view .LVU181
 534 003a C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 535              		.loc 1 211 31 view .LVU182
 536 003c AB73     		strb	r3, [r5, #14]
 212:Core/Src/NOS_UART.c ****     message->command.bytes[1] = data->rx_buff[currPos++];
 537              		.loc 1 212 5 is_stmt 1 view .LVU183
 538              	.LVL40:
 539              		.loc 1 212 46 is_stmt 0 view .LVU184
 540 003e 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 541              		.loc 1 212 31 view .LVU185
 542 0040 6B73     		strb	r3, [r5, #13]
 213:Core/Src/NOS_UART.c ****     message->command.bytes[0] = data->rx_buff[currPos++];
 543              		.loc 1 213 5 is_stmt 1 view .LVU186
 544              	.LVL41:
 545              		.loc 1 213 46 is_stmt 0 view .LVU187
 546 0042 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 547              		.loc 1 213 31 view .LVU188
 548 0044 2B73     		strb	r3, [r5, #12]
 214:Core/Src/NOS_UART.c **** 
 215:Core/Src/NOS_UART.c ****     for(int i = 0; i < message->byteCount.data - 16; i++)
 549              		.loc 1 215 5 is_stmt 1 view .LVU189
 550              	.LBB7:
 551              		.loc 1 215 9 view .LVU190
 552              	.LVL42:
 553              		.loc 1 215 13 is_stmt 0 view .LVU191
 554 0046 0023     		movs	r3, #0
 555              	.LBE7:
 213:Core/Src/NOS_UART.c ****     message->command.bytes[0] = data->rx_buff[currPos++];
 556              		.loc 1 213 54 view .LVU192
 557 0048 0E22     		movs	r2, #14
 558              	.LBB8:
 559              		.loc 1 215 5 view .LVU193
 560 004a 06E0     		b	.L26
 561              	.LVL43:
 562              	.L27:
 216:Core/Src/NOS_UART.c ****     {
 217:Core/Src/NOS_UART.c ****         message->data[i] = data->rx_buff[currPos++];
 563              		.loc 1 217 9 is_stmt 1 discriminator 3 view .LVU194
 564              		.loc 1 217 41 is_stmt 0 discriminator 3 view .LVU195
 565 004c 14F802C0 		ldrb	ip, [r4, r2]	@ zero_extendqisi2
 566              		.loc 1 217 26 discriminator 3 view .LVU196
 567 0050 E818     		adds	r0, r5, r3
 568 0052 80F810C0 		strb	ip, [r0, #16]
 215:Core/Src/NOS_UART.c ****     {
 569              		.loc 1 215 55 is_stmt 1 discriminator 3 view .LVU197
 570 0056 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 15


 571              	.LVL44:
 572              		.loc 1 217 49 is_stmt 0 discriminator 3 view .LVU198
 573 0058 0132     		adds	r2, r2, #1
 574              	.LVL45:
 575              	.L26:
 215:Core/Src/NOS_UART.c ****     {
 576              		.loc 1 215 22 is_stmt 1 discriminator 1 view .LVU199
 215:Core/Src/NOS_UART.c ****     {
 577              		.loc 1 215 48 is_stmt 0 discriminator 1 view .LVU200
 578 005a A1F11000 		sub	r0, r1, #16
 215:Core/Src/NOS_UART.c ****     {
 579              		.loc 1 215 22 discriminator 1 view .LVU201
 580 005e 9842     		cmp	r0, r3
 581 0060 F4DC     		bgt	.L27
 582              	.LBE8:
 218:Core/Src/NOS_UART.c ****     }
 219:Core/Src/NOS_UART.c **** 
 220:Core/Src/NOS_UART.c ****     message->CRC16.bytes[1] = data->rx_buff[currPos++];
 583              		.loc 1 220 5 is_stmt 1 view .LVU202
 584              		.loc 1 220 52 is_stmt 0 view .LVU203
 585 0062 531C     		adds	r3, r2, #1
 586              	.LVL46:
 587              		.loc 1 220 44 view .LVU204
 588 0064 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 589              		.loc 1 220 29 view .LVU205
 590 0066 85F81122 		strb	r2, [r5, #529]
 221:Core/Src/NOS_UART.c ****     message->CRC16.bytes[0] = data->rx_buff[currPos++];
 591              		.loc 1 221 5 is_stmt 1 view .LVU206
 592              	.LVL47:
 593              		.loc 1 221 44 is_stmt 0 view .LVU207
 594 006a E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 595              		.loc 1 221 29 view .LVU208
 596 006c 85F81032 		strb	r3, [r5, #528]
 222:Core/Src/NOS_UART.c **** 
 223:Core/Src/NOS_UART.c ****     data->value.data = GetCRC16(&data->rx_buff,message->byteCount.data - 2);
 597              		.loc 1 223 5 is_stmt 1 view .LVU209
 598              		.loc 1 223 24 is_stmt 0 view .LVU210
 599 0070 0239     		subs	r1, r1, #2
 600 0072 2046     		mov	r0, r4
 601 0074 FFF7FEFF 		bl	GetCRC16
 602              	.LVL48:
 603              		.loc 1 223 22 view .LVU211
 604 0078 04F58054 		add	r4, r4, #4096
 605              	.LVL49:
 606              		.loc 1 223 22 view .LVU212
 607 007c A082     		strh	r0, [r4, #20]	@ movhi
 224:Core/Src/NOS_UART.c **** 
 225:Core/Src/NOS_UART.c ****     if(data->value.data == message->CRC16.data)
 608              		.loc 1 225 5 is_stmt 1 view .LVU213
 609              		.loc 1 225 42 is_stmt 0 view .LVU214
 610 007e B5F81032 		ldrh	r3, [r5, #528]
 611              		.loc 1 225 7 view .LVU215
 612 0082 9842     		cmp	r0, r3
 613 0084 09D0     		beq	.L30
 226:Core/Src/NOS_UART.c ****     {
 227:Core/Src/NOS_UART.c ****         return true;
 228:Core/Src/NOS_UART.c ****     }
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 16


 229:Core/Src/NOS_UART.c **** 
 230:Core/Src/NOS_UART.c ****     if(message->address.data != 0)
 614              		.loc 1 230 5 is_stmt 1 view .LVU216
 615              		.loc 1 230 24 is_stmt 0 view .LVU217
 616 0086 2B88     		ldrh	r3, [r5]
 617              		.loc 1 230 7 view .LVU218
 618 0088 33B1     		cbz	r3, .L24
 231:Core/Src/NOS_UART.c ****     {
 232:Core/Src/NOS_UART.c ****         if(message->channel.data != 0)
 619              		.loc 1 232 9 is_stmt 1 view .LVU219
 620              		.loc 1 232 28 is_stmt 0 view .LVU220
 621 008a 6B88     		ldrh	r3, [r5, #2]
 622              		.loc 1 232 11 view .LVU221
 623 008c 23B1     		cbz	r3, .L24
 233:Core/Src/NOS_UART.c ****         {
 234:Core/Src/NOS_UART.c ****             if(message->byteCount.data != 0)
 624              		.loc 1 234 13 is_stmt 1 view .LVU222
 625              		.loc 1 234 34 is_stmt 0 view .LVU223
 626 008e AB88     		ldrh	r3, [r5, #4]
 627              		.loc 1 234 15 view .LVU224
 628 0090 13B1     		cbz	r3, .L24
 235:Core/Src/NOS_UART.c ****             {
 236:Core/Src/NOS_UART.c ****                 return true;            
 629              		.loc 1 236 24 view .LVU225
 630 0092 0120     		movs	r0, #1
 631 0094 00E0     		b	.L24
 632              	.LVL50:
 633              	.L29:
 202:Core/Src/NOS_UART.c ****     }
 634              		.loc 1 202 16 view .LVU226
 635 0096 0020     		movs	r0, #0
 636              	.LVL51:
 637              	.L24:
 237:Core/Src/NOS_UART.c ****             }
 238:Core/Src/NOS_UART.c ****         }
 239:Core/Src/NOS_UART.c ****     }
 240:Core/Src/NOS_UART.c **** 
 241:Core/Src/NOS_UART.c **** }
 638              		.loc 1 241 1 view .LVU227
 639 0098 38BD     		pop	{r3, r4, r5, pc}
 640              	.LVL52:
 641              	.L30:
 227:Core/Src/NOS_UART.c ****     }
 642              		.loc 1 227 16 view .LVU228
 643 009a 0120     		movs	r0, #1
 644 009c FCE7     		b	.L24
 645              		.cfi_endproc
 646              	.LFE71:
 648              		.section	.text.NOS_UART_PacketApprovedNotice,"ax",%progbits
 649              		.align	1
 650              		.global	NOS_UART_PacketApprovedNotice
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 655              	NOS_UART_PacketApprovedNotice:
 656              	.LVL53:
 657              	.LFB72:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 17


 242:Core/Src/NOS_UART.c **** 
 243:Core/Src/NOS_UART.c **** bool NOS_UART_PacketApprovedNotice(UART_Message* message,UART_HandleTypeDef* uart)
 244:Core/Src/NOS_UART.c **** {
 658              		.loc 1 244 1 is_stmt 1 view -0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 32
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		.loc 1 244 1 is_stmt 0 view .LVU230
 663 0000 10B5     		push	{r4, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 4, -8
 666              		.cfi_offset 14, -4
 667 0002 88B0     		sub	sp, sp, #32
 668              		.cfi_def_cfa_offset 40
 669 0004 0446     		mov	r4, r0
 670 0006 0846     		mov	r0, r1
 671              	.LVL54:
 245:Core/Src/NOS_UART.c ****     uint8_t buff[32];
 672              		.loc 1 245 5 is_stmt 1 view .LVU231
 246:Core/Src/NOS_UART.c ****     int currPos = 0;
 673              		.loc 1 246 5 view .LVU232
 247:Core/Src/NOS_UART.c **** 
 248:Core/Src/NOS_UART.c ****     buff[currPos++] = message->address.bytes[1];
 674              		.loc 1 248 5 view .LVU233
 675              		.loc 1 248 45 is_stmt 0 view .LVU234
 676 0008 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 677              		.loc 1 248 21 view .LVU235
 678 000a 8DF80030 		strb	r3, [sp]
 249:Core/Src/NOS_UART.c ****     buff[currPos++] = message->address.bytes[0];
 679              		.loc 1 249 5 is_stmt 1 view .LVU236
 680              	.LVL55:
 681              		.loc 1 249 45 is_stmt 0 view .LVU237
 682 000e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 683              		.loc 1 249 21 view .LVU238
 684 0010 8DF80130 		strb	r3, [sp, #1]
 250:Core/Src/NOS_UART.c **** 
 251:Core/Src/NOS_UART.c ****     buff[currPos++] = message->channel.bytes[1];
 685              		.loc 1 251 5 is_stmt 1 view .LVU239
 686              	.LVL56:
 687              		.loc 1 251 45 is_stmt 0 view .LVU240
 688 0014 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 689              		.loc 1 251 21 view .LVU241
 690 0016 8DF80230 		strb	r3, [sp, #2]
 252:Core/Src/NOS_UART.c ****     buff[currPos++] = message->channel.bytes[0];
 691              		.loc 1 252 5 is_stmt 1 view .LVU242
 692              	.LVL57:
 693              		.loc 1 252 45 is_stmt 0 view .LVU243
 694 001a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 695              		.loc 1 252 21 view .LVU244
 696 001c 8DF80330 		strb	r3, [sp, #3]
 253:Core/Src/NOS_UART.c **** 
 254:Core/Src/NOS_UART.c ****     buff[currPos++] = message->byteCount.bytes[1];
 697              		.loc 1 254 5 is_stmt 1 view .LVU245
 698              	.LVL58:
 699              		.loc 1 254 47 is_stmt 0 view .LVU246
 700 0020 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 701              		.loc 1 254 21 view .LVU247
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 18


 702 0022 8DF80430 		strb	r3, [sp, #4]
 255:Core/Src/NOS_UART.c ****     buff[currPos++] = message->byteCount.bytes[0];
 703              		.loc 1 255 5 is_stmt 1 view .LVU248
 704              	.LVL59:
 705              		.loc 1 255 47 is_stmt 0 view .LVU249
 706 0026 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 707              		.loc 1 255 21 view .LVU250
 708 0028 8DF80530 		strb	r3, [sp, #5]
 256:Core/Src/NOS_UART.c **** 
 257:Core/Src/NOS_UART.c ****     buff[currPos++] = message->packetId.bytes[3];
 709              		.loc 1 257 5 is_stmt 1 view .LVU251
 710              	.LVL60:
 711              		.loc 1 257 46 is_stmt 0 view .LVU252
 712 002c E37A     		ldrb	r3, [r4, #11]	@ zero_extendqisi2
 713              		.loc 1 257 21 view .LVU253
 714 002e 8DF80630 		strb	r3, [sp, #6]
 258:Core/Src/NOS_UART.c ****     buff[currPos++] = message->packetId.bytes[2];
 715              		.loc 1 258 5 is_stmt 1 view .LVU254
 716              	.LVL61:
 717              		.loc 1 258 46 is_stmt 0 view .LVU255
 718 0032 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 719              		.loc 1 258 21 view .LVU256
 720 0034 8DF80730 		strb	r3, [sp, #7]
 259:Core/Src/NOS_UART.c ****     buff[currPos++] = message->packetId.bytes[1];
 721              		.loc 1 259 5 is_stmt 1 view .LVU257
 722              	.LVL62:
 723              		.loc 1 259 46 is_stmt 0 view .LVU258
 724 0038 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 725              		.loc 1 259 21 view .LVU259
 726 003a 8DF80830 		strb	r3, [sp, #8]
 260:Core/Src/NOS_UART.c ****     buff[currPos++] = message->packetId.bytes[0];
 727              		.loc 1 260 5 is_stmt 1 view .LVU260
 728              	.LVL63:
 729              		.loc 1 260 46 is_stmt 0 view .LVU261
 730 003e 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 731              		.loc 1 260 21 view .LVU262
 732 0040 8DF80930 		strb	r3, [sp, #9]
 261:Core/Src/NOS_UART.c **** 
 262:Core/Src/NOS_UART.c ****     buff[currPos++] = message->command.bytes[3];
 733              		.loc 1 262 5 is_stmt 1 view .LVU263
 734              	.LVL64:
 735              		.loc 1 262 45 is_stmt 0 view .LVU264
 736 0044 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 737              		.loc 1 262 21 view .LVU265
 738 0046 8DF80A30 		strb	r3, [sp, #10]
 263:Core/Src/NOS_UART.c ****     buff[currPos++] = message->command.bytes[2];
 739              		.loc 1 263 5 is_stmt 1 view .LVU266
 740              	.LVL65:
 741              		.loc 1 263 45 is_stmt 0 view .LVU267
 742 004a A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 743              		.loc 1 263 21 view .LVU268
 744 004c 8DF80B30 		strb	r3, [sp, #11]
 264:Core/Src/NOS_UART.c ****     buff[currPos++] = message->command.bytes[1];
 745              		.loc 1 264 5 is_stmt 1 view .LVU269
 746              	.LVL66:
 747              		.loc 1 264 45 is_stmt 0 view .LVU270
 748 0050 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 19


 749              		.loc 1 264 21 view .LVU271
 750 0052 8DF80C30 		strb	r3, [sp, #12]
 265:Core/Src/NOS_UART.c ****     buff[currPos++] = message->command.bytes[0];
 751              		.loc 1 265 5 is_stmt 1 view .LVU272
 752              	.LVL67:
 753              		.loc 1 265 45 is_stmt 0 view .LVU273
 754 0056 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 755              		.loc 1 265 21 view .LVU274
 756 0058 8DF80D30 		strb	r3, [sp, #13]
 266:Core/Src/NOS_UART.c **** 
 267:Core/Src/NOS_UART.c ****     for(int i = 0; i < 16; i++)
 757              		.loc 1 267 5 is_stmt 1 view .LVU275
 758              	.LBB9:
 759              		.loc 1 267 9 view .LVU276
 760              	.LVL68:
 761              		.loc 1 267 13 is_stmt 0 view .LVU277
 762 005c 0022     		movs	r2, #0
 763              	.LBE9:
 265:Core/Src/NOS_UART.c ****     buff[currPos++] = message->command.bytes[0];
 764              		.loc 1 265 17 view .LVU278
 765 005e 0E23     		movs	r3, #14
 766              	.LBB10:
 767              		.loc 1 267 5 view .LVU279
 768 0060 09E0     		b	.L34
 769              	.LVL69:
 770              	.L35:
 268:Core/Src/NOS_UART.c ****     {
 269:Core/Src/NOS_UART.c ****         buff[currPos++] = 0xFF;
 771              		.loc 1 269 9 is_stmt 1 discriminator 3 view .LVU280
 772              		.loc 1 269 25 is_stmt 0 discriminator 3 view .LVU281
 773 0062 03F12001 		add	r1, r3, #32
 774 0066 0DEB010C 		add	ip, sp, r1
 775 006a 4FF0FF0E 		mov	lr, #255
 776 006e 0CF820EC 		strb	lr, [ip, #-32]
 267:Core/Src/NOS_UART.c ****     {
 777              		.loc 1 267 29 is_stmt 1 discriminator 3 view .LVU282
 778 0072 0132     		adds	r2, r2, #1
 779              	.LVL70:
 780              		.loc 1 269 21 is_stmt 0 discriminator 3 view .LVU283
 781 0074 0133     		adds	r3, r3, #1
 782              	.LVL71:
 783              	.L34:
 267:Core/Src/NOS_UART.c ****     {
 784              		.loc 1 267 22 is_stmt 1 discriminator 1 view .LVU284
 785 0076 0F2A     		cmp	r2, #15
 786 0078 F3DD     		ble	.L35
 787              	.LBE10:
 270:Core/Src/NOS_UART.c ****     }
 271:Core/Src/NOS_UART.c **** 
 272:Core/Src/NOS_UART.c ****     buff[currPos++] = message->CRC16.bytes[1];
 788              		.loc 1 272 5 view .LVU285
 789              		.loc 1 272 17 is_stmt 0 view .LVU286
 790 007a 5A1C     		adds	r2, r3, #1
 791              	.LVL72:
 792              		.loc 1 272 43 view .LVU287
 793 007c 94F81112 		ldrb	r1, [r4, #529]	@ zero_extendqisi2
 794              		.loc 1 272 21 view .LVU288
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 20


 795 0080 2033     		adds	r3, r3, #32
 796 0082 6B44     		add	r3, sp, r3
 797 0084 03F8201C 		strb	r1, [r3, #-32]
 273:Core/Src/NOS_UART.c ****     buff[currPos++] = message->CRC16.bytes[0];
 798              		.loc 1 273 5 is_stmt 1 view .LVU289
 799              	.LVL73:
 800              		.loc 1 273 43 is_stmt 0 view .LVU290
 801 0088 94F81012 		ldrb	r1, [r4, #528]	@ zero_extendqisi2
 802              		.loc 1 273 21 view .LVU291
 803 008c 02F12003 		add	r3, r2, #32
 804 0090 6B44     		add	r3, sp, r3
 805 0092 03F8201C 		strb	r1, [r3, #-32]
 274:Core/Src/NOS_UART.c **** 
 275:Core/Src/NOS_UART.c ****     HAL_UART_Transmit(uart,buff,32,1000);
 806              		.loc 1 275 5 is_stmt 1 view .LVU292
 807 0096 4FF47A73 		mov	r3, #1000
 808 009a 2022     		movs	r2, #32
 809 009c 6946     		mov	r1, sp
 810 009e FFF7FEFF 		bl	HAL_UART_Transmit
 811              	.LVL74:
 276:Core/Src/NOS_UART.c **** 
 277:Core/Src/NOS_UART.c **** }
 812              		.loc 1 277 1 is_stmt 0 view .LVU293
 813 00a2 08B0     		add	sp, sp, #32
 814              		.cfi_def_cfa_offset 8
 815              		@ sp needed
 816 00a4 10BD     		pop	{r4, pc}
 817              		.loc 1 277 1 view .LVU294
 818              		.cfi_endproc
 819              	.LFE72:
 821              		.section	.text.NOS_UART_CheckReceive,"ax",%progbits
 822              		.align	1
 823              		.global	NOS_UART_CheckReceive
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 828              	NOS_UART_CheckReceive:
 829              	.LVL75:
 830              	.LFB73:
 278:Core/Src/NOS_UART.c **** 
 279:Core/Src/NOS_UART.c **** 
 280:Core/Src/NOS_UART.c **** bool NOS_UART_CheckReceive(NOS_UART_Struct* data)
 281:Core/Src/NOS_UART.c **** {
 831              		.loc 1 281 1 is_stmt 1 view -0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 282:Core/Src/NOS_UART.c ****     return data->rx_flag;   
 836              		.loc 1 282 5 view .LVU296
 837              		.loc 1 282 16 is_stmt 0 view .LVU297
 838 0000 00F58050 		add	r0, r0, #4096
 839              	.LVL76:
 283:Core/Src/NOS_UART.c **** }
 840              		.loc 1 283 1 view .LVU298
 841 0004 8079     		ldrb	r0, [r0, #6]	@ zero_extendqisi2
 842              	.LVL77:
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 21


 843              		.loc 1 283 1 view .LVU299
 844 0006 7047     		bx	lr
 845              		.cfi_endproc
 846              	.LFE73:
 848              		.section	.text.NOS_UART_GetReceivedData,"ax",%progbits
 849              		.align	1
 850              		.global	NOS_UART_GetReceivedData
 851              		.syntax unified
 852              		.thumb
 853              		.thumb_func
 855              	NOS_UART_GetReceivedData:
 856              	.LVL78:
 857              	.LFB74:
 284:Core/Src/NOS_UART.c **** 
 285:Core/Src/NOS_UART.c **** uint8_t* NOS_UART_GetReceivedData(NOS_UART_Struct* data)
 286:Core/Src/NOS_UART.c **** {
 858              		.loc 1 286 1 is_stmt 1 view -0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 0, uses_anonymous_args = 0
 862              		@ link register save eliminated.
 287:Core/Src/NOS_UART.c ****     return data->fuckBuff;
 863              		.loc 1 287 5 view .LVU301
 288:Core/Src/NOS_UART.c **** }
 864              		.loc 1 288 1 is_stmt 0 view .LVU302
 865 0000 00F50060 		add	r0, r0, #2048
 866              	.LVL79:
 867              		.loc 1 288 1 view .LVU303
 868 0004 7047     		bx	lr
 869              		.cfi_endproc
 870              	.LFE74:
 872              		.section	.text.NOS_UART_EndReceive,"ax",%progbits
 873              		.align	1
 874              		.global	NOS_UART_EndReceive
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 879              	NOS_UART_EndReceive:
 880              	.LVL80:
 881              	.LFB75:
 289:Core/Src/NOS_UART.c **** 
 290:Core/Src/NOS_UART.c **** void NOS_UART_EndReceive(NOS_UART_Struct* data)
 291:Core/Src/NOS_UART.c **** {
 882              		.loc 1 291 1 is_stmt 1 view -0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 0
 885              		@ frame_needed = 0, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 292:Core/Src/NOS_UART.c ****     data->rx_flag = false;
 887              		.loc 1 292 5 view .LVU305
 888              		.loc 1 292 19 is_stmt 0 view .LVU306
 889 0000 00F58050 		add	r0, r0, #4096
 890              	.LVL81:
 891              		.loc 1 292 19 view .LVU307
 892 0004 0023     		movs	r3, #0
 893 0006 8371     		strb	r3, [r0, #6]
 293:Core/Src/NOS_UART.c **** }
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 22


 894              		.loc 1 293 1 view .LVU308
 895 0008 7047     		bx	lr
 896              		.cfi_endproc
 897              	.LFE75:
 899              		.global	currCRC
 900              		.section	.bss.currCRC,"aw",%nobits
 901              		.align	2
 904              	currCRC:
 905 0000 0000     		.space	2
 906              		.text
 907              	.Letext0:
 908              		.file 2 "c:\\users\\igorn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 909              		.file 3 "c:\\users\\igorn\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 910              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 911              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 912              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 913              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 914              		.file 8 "Core/Inc/NOS_Typedefs.h"
 915              		.file 9 "Core/Inc/NOS_UART.h"
ARM GAS  C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 NOS_UART.c
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:19     .text.NOS_UART_ReceiveReset:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:25     .text.NOS_UART_ReceiveReset:00000000 NOS_UART_ReceiveReset
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:60     .text.NOS_UART_ContinueReceive:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:66     .text.NOS_UART_ContinueReceive:00000000 NOS_UART_ContinueReceive
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:95     .text.NOS_UART_ReceiveAbort:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:101    .text.NOS_UART_ReceiveAbort:00000000 NOS_UART_ReceiveAbort
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:183    .text.NOS_UART_Timer_Handler:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:189    .text.NOS_UART_Timer_Handler:00000000 NOS_UART_Timer_Handler
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:256    .text.GetCRC16:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:262    .text.GetCRC16:00000000 GetCRC16
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:351    .text.NOS_UART_ReceiveHandler:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:357    .text.NOS_UART_ReceiveHandler:00000000 NOS_UART_ReceiveHandler
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:435    .text.NOS_UART_ParsePacket:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:441    .text.NOS_UART_ParsePacket:00000000 NOS_UART_ParsePacket
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:649    .text.NOS_UART_PacketApprovedNotice:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:655    .text.NOS_UART_PacketApprovedNotice:00000000 NOS_UART_PacketApprovedNotice
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:822    .text.NOS_UART_CheckReceive:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:828    .text.NOS_UART_CheckReceive:00000000 NOS_UART_CheckReceive
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:849    .text.NOS_UART_GetReceivedData:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:855    .text.NOS_UART_GetReceivedData:00000000 NOS_UART_GetReceivedData
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:873    .text.NOS_UART_EndReceive:00000000 $t
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:879    .text.NOS_UART_EndReceive:00000000 NOS_UART_EndReceive
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:904    .bss.currCRC:00000000 currCRC
C:\Users\igorn\AppData\Local\Temp\ccWr8jzE.s:901    .bss.currCRC:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Receive_IT
HAL_UART_Transmit
